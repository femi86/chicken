this is the repository where I put the arduino code for the chicken coop.
Unfortunately, I did not update all developments with git, so it starts only
from the lates version, as of 7 april 2022, but the actual code was modified on 
october 21st, 2021.

there are different branches, as there are different versions of the code based on 
whether a real time clock is present or not, or whether hysteresis is evaluated 
in some way or not (to assess light increasing in time or decreasing in time).


Basically, the code drives a 4 channel relay based on different times of the day.
The time is controlled by a real time clock module, and a calculation for 
approximate sunrise and sundown is performed. However, the actual evaluation whether 
it is dusk or dawn (i.e. when to open the chickenstall door) is made  with an analog
light sensor.

two other sensors are present: a temperature sensor and a limit switch, which detects
when the door is closed.

The 4 channel relay drives:
- the door mechanism, which is basically a 220V endless
screw motor that drives a piston at the end of which is attached a cable. this cable
pulls the door shut when the piston is extended, opens the door when it is retracted
- the radio and internal red light, which is turned on at dusk (to guide the chicken in,
allow us to check if the door is still open, and to scare the foxes with radio sounds.
- the lamps in the front of the chicken coop, which are turned on at dusk and night,
and blink alternatively when something passes in front of the motion sensor.
- the heating lamp, based on the reading of the temperature sensor, if the temperature
goes below -1 degrees C

The principle of function is as follows: the real time clock will give the time, and
is adjusted every time the computer is connected. The dawn and dusk calculation evaluates
based on the date at what time dawn and dusk will happen. the light sensor evaluates the 
intensity of light. based on these informations, the code will make an evaluation and
assign a time of day between the values night, dawn, day, dusk.
These values then define the different cases in the switch case block where the specific 
commands for that particular time are to be run. These commands are:

- Night (if the light is below a value of 30, and it is 1 hour after theoretical sundown
and 1 hour before theoretical sunrise): 
turn on the lamp if the temperature is below -1 degrees C, turn on the blinking
lights with the motion sensor, with a pause of 80 seconds between activations, check periodically if the door is opened (with the 
limit switch), and if it is open close it (#this may be a weak link if the limit switch fails,
since it may eventually have some stress on the motor/door/cable).
blink the arduino LED 300 ms on, 1500 ms off

- Dawn (the light is increasing, and it is between 1 hour before and 1 hour after the theoretical sunrise): 
evaluate whether the time is within the range of the calculated dawn (+/- 1 hour
from the calculated dawn), and if the light value is increasing. if it is a steady 
increase for at least 5 minutes, then open the door. The heating lamp is turned off,
but the blinking remains, with a pause between activations of 10 seconds.
blink the arduino LED 300 ms on, 300 ms off

- Day (the light is high, and it is 1 hour after theoretical sunrise and 1 hour before theoretical sundown): 
have everything off, and check periodically whether the door is closed with the limit switch.
if it is, open it (it may have been closed by hand and forgotten)
blink the arduino LED 1500 ms on, 1500 ms off.

- Sundown (light is decreasing, and it is between 1 hour before and 1 hour after theoretical sundown: 
turn on the radio if the door is open, and tun on the blinking lights with motion sensor.
blink the arduino 600 ms on, 300 ms off

- Dusk (the light is below a value of 30, and it is within the time range of sundown):
wait 5 minutes, then start the door closing mechanism. once the door is closed (i.e. the limit switch is triggered), turn off the radio. wait 1 minute, and reset the arduino.

there is also a between_states situation, just as a potential failsafe. here what happens is that it 
just waits one minute.
 

